decl @getint(): i32
decl @getch(): i32
decl @getarray(*i32): i32
decl @putint(i32)
decl @putch(i32)
decl @putarray(i32, *i32)
decl @starttime()
decl @stoptime()

global %g_1 = alloc i32, 0

fun @func(@n: i32): i32 {
%entry:
  %n_1 = alloc i32
  store @n, %n_1
  %0 = load %g_1
  %1 = load %n_1
  %2 = add %0, %1
  store %2, %g_1
  %3 = load %g_1
  call @putint(%3)
  %4 = load %g_1
  ret %4
}

fun @main(): i32 {
%entry:
  %i_1 = alloc i32
  %5 = call @getint()
  store %5, %i_1
  %6 = load %i_1
  %7 = gt %6, 10
  %8 = load %i_1
  %9 = call @func(%8)
  %10 = ne 0, %7
  %11 = ne 0, %9
  %12 = and %11, %10
  br %12, %then0, %else0

%then0:
  store 1, %i_1
  jump %end0

%else0:
  store 0, %i_1
  jump %end0

%end0:
  %13 = call @getint()
  store %13, %i_1
  %14 = load %i_1
  %15 = gt %14, 11
  %16 = load %i_1
  %17 = call @func(%16)
  %18 = ne 0, %15
  %19 = ne 0, %17
  %20 = and %19, %18
  br %20, %then1, %else1

%then1:
  store 1, %i_1
  jump %end1

%else1:
  store 0, %i_1
  jump %end1

%end1:
  %21 = call @getint()
  store %21, %i_1
  %22 = load %i_1
  %23 = le %22, 99
  %24 = load %i_1
  %25 = call @func(%24)
  %26 = or %23, %25
  %27 = ne %26, 0
  br %27, %then2, %else2

%then2:
  store 1, %i_1
  jump %end2

%else2:
  store 0, %i_1
  jump %end2

%end2:
  %28 = call @getint()
  store %28, %i_1
  %29 = load %i_1
  %30 = le %29, 100
  %31 = load %i_1
  %32 = call @func(%31)
  %33 = or %30, %32
  %34 = ne %33, 0
  br %34, %then3, %else3

%then3:
  store 1, %i_1
  jump %end3

%else3:
  store 0, %i_1
  jump %end3

%end3:
  %35 = call @func(99)
  %36 = eq 0, %35
  %37 = call @func(100)
  %38 = ne 0, %36
  %39 = ne 0, %37
  %40 = and %39, %38
  br %40, %then4, %else4

%then4:
  store 1, %i_1
  jump %end4

%else4:
  store 0, %i_1
  jump %end4

%end4:
  ret 0
}


