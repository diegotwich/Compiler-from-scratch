fun @add(@a: i32, @b: i32): i32 {
%entry:
  %a_1 = alloc i32
  store @a, %a_1
  %b_1 = alloc i32
  store @b, %b_1
  %0 = load %a_1
  %1 = load %b_1
  %2 = add %0, %1
  ret %2
}

fun @sub(@a: i32, @b: i32): i32 {
%entry:
  %a_2 = alloc i32
  store @a, %a_2
  %b_2 = alloc i32
  store @b, %b_2
  %3 = load %a_2
  %4 = load %b_2
  %5 = sub %3, %4
  ret %5
}

fun @mul(@a: i32, @b: i32): i32 {
%entry:
  %a_3 = alloc i32
  store @a, %a_3
  %b_3 = alloc i32
  store @b, %b_3
  %6 = load %a_3
  %7 = load %b_3
  %8 = mul %6, %7
  ret %8
}

fun @div(@a: i32, @b: i32): i32 {
%entry:
  %a_4 = alloc i32
  store @a, %a_4
  %b_4 = alloc i32
  store @b, %b_4
  %9 = load %a_4
  %10 = load %b_4
  %11 = div %9, %10
  ret %11
}

fun @main(): i32 {
%entry:
  %x_1 = alloc i32
  %12 = call @sub(1, 2)
  %13 = call @div(4, 5)
  %14 = call @mul(3, %13)
  %15 = call @add(%12, %14)
  store %15, %x_1
  %y_1 = alloc i32
  %16 = add 0, 1
  %17 = add 0, 0
  %18 = load %x_1
  %19 = call @add(1, 2)
  %20 = gt %19, 10
  %21 = or %18, %20
  %22 = ne %21, 0
  %23 = call @div(%22, 5)
  %24 = call @mul(3, %23)
  %25 = or %17, %24
  %26 = ne %25, 0
  %27 = call @add(%16, %26)
  store %27, %y_1
  %28 = load %x_1
  %29 = load %y_1
  %30 = add %28, %29
  ret %30
}


